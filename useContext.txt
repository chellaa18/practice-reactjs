//app component usecontext 

import React, { useState, useEffect, createContext, useContext } from "react";
import { Routes, Route } from "react-router-dom";
import Card from "./Card";
  export const HelloContext = createContext();
function App() {


  const [username, setUsername] = useState("");
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [users, setUsers] = useState([]);


  function HelloProvider({ children }) {
    const helloValue = "hello";
  
    return (
      <HelloContext.Provider value={helloValue}>{children}</HelloContext.Provider>
    );
  }
  
  // useEffect(() => {
  //   // Retrieve user data from local storage when the component mounts
  //   const storedData = JSON.parse(localStorage.getItem("userData")) || [];
  //   setUsers(storedData);
  // }, []);

  const handleSubmit = (e) => {
    e.preventDefault();

    const userData = {
      username,
      email,
      password,
    };

    const storedData = JSON.parse(localStorage.getItem("userData")) || [];

    // Add the new user data to the array
    storedData.push(userData);

    // Store the updated array in local storage
    localStorage.setItem("userData", JSON.stringify(storedData));

    // Clear the form fields
    setUsername("");
    setEmail("");
    setPassword("");

    // Update the state to display the new user
    setUsers(storedData);
  };

  const handleDelete = (index) => {
    const updatedUsers = [...users];
    
    updatedUsers.splice(index, 1);

    // Update the state and local storage to remove the deleted user
    setUsers(updatedUsers);
    localStorage.setItem("userData", JSON.stringify(updatedUsers));
  };

  return (
    <div className="App bg-dark">
      <div className="container d-flex justify-content-center align-items-center vh-100">
        <div className="row">
          <form className="mt-4" onSubmit={handleSubmit}>
            <div className="form-outline mb-4">
              <input
                type="text"
                id="form1Example"
                className="form-control"
                value={username}
                onChange={(e) => setUsername(e.target.value)}
                placeholder="User Name"
              />
            </div>
            <div className="form-outline mb-4">
              <input
                type="email"
                id="form1Example1"
                className="form-control"
                value={email}
                onChange={(e) => setEmail(e.target.value)}
                placeholder="Email address"
              />
            </div>
            <div className="form-outline mb-4">
              <input
                type="password"
                id="form1Example2"
                className="form-control"
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                placeholder="Password"
              />
            </div>
            <button type="submit" className="btn btn-primary btn-block">
              Sign in
            </button>
          </form>
        </div>
     
      </div>
      <div className="container">
      <div className="row">
      {users.length > 0 && (
        <div className="row text-white">
          <h2>User Details</h2>
          <ul>
            {users.map((user, index) => (
              <li key={index}>
                <strong>Username:</strong> {user.username}
                <br />
                <strong>Email:</strong> {user.email}
                <button
                  type="button"
                  className="btn btn-danger btn-sm ml-2"
                  onClick={() => handleDelete(index)}
                >
                  Delete
                </button>
              </li>
            ))}
          </ul>
        </div>
      )}</div>
      </div>
      <Routes>
      <Route path="/card" element={<Card/>}/>
      </Routes>

      <HelloProvider>
      {/* Your existing code */}
      <Card />
      {/* More of your code */}
    </HelloProvider>
    </div>
  );
}

export default App;


//card section usecontext

import React, { useState, useContext } from "react";
import { json } from "./json";
import { useNavigate } from "react-router-dom";
import { HelloContext } from "./App";

const Card = () => {
  const [showItem, setShowItem] = useState(4);
  const [newProductTitle, setNewProductTitle] = useState("");
  const products = json.products; 

  const helloValue = useContext(HelloContext);
  // console.log(products);
  const navigate = useNavigate();

  const showMore = () => {
    setShowItem(showItem + 8);
  };
  // const showLess = ()=>{
  //   setShowItem(showItem - 22);
  // }

 
  return (
    <div className="container mt-4">
      <h4 style={{ color: "#d51c9a" }}>Products</h4>
      <div className="row d-flex">
        {products.length > 0 ? (
          products.slice(0, showItem).map((product, i) => {
            return (
              <div
                className="card ms-2 mt-2 col-lg-2 m-1"
                key={product.id}
                style={{ width: "13rem" }}
              >
                <img
                  src={product.images[0]}
                  className="card-img-top"
                  alt="products"
                ></img>
                <div className="card-body p-4">
                  <h5 className="card-title">{product.title}</h5>
                  {/* <p className="card-text">Price: ${product.price}</p> */}
                  {/* <p>Only {product.stock} left..</p> */}
                </div>
                <button
                  className="view-button mb-4"
                  onClick={() => navigate(`/viewproduct/${product.id}`)}
                >
                  View Product
                </button>
                <button className="pro-button mb-4">Add to Cart</button>
              </div>
            );
          })
        ) : (
          <h2>No data</h2>
        )}
   
        {showItem < products.length ? (
          <button className="view-button my-4" onClick={showMore}>
            Show More...
          </button>
        ) : (
          <button className="view-button my-4" onClick={()=>setShowItem(10)}>Show Less..</button>
        )}
      </div>
      <p className="text-white">Hello value from App: {helloValue}</p>
    </div>
  );
};

export default Card;