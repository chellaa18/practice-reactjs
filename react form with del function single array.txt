import React, { useState, useEffect } from "react";

function App() {
  const [formData, setFormData] = useState({
    username: "",
    email: "",
    password: "",
  });

  const [users, setUsers] = useState([]);

  useEffect(() => {
    // Retrieve user data from local storage when the component mounts
    const storedData = JSON.parse(window.localStorage.getItem("userData")) || [];
    setUsers(storedData);
  }, []);

  const handleSubmit = (e) => {
    e.preventDefault();

    const userData = {
      username: formData.username,
      email: formData.email,
      password: formData.password,
    };

    const storedData = JSON.parse(window.localStorage.getItem("userData")) || [];

    // Add the new user data to the array
    storedData.push(userData);

    // Store the updated array in local storage
    window.localStorage.setItem("userData", JSON.stringify(storedData));

    // Clear the form fields
    setFormData({ username: "", email: "", password: "" });

    // Update the state to display the new user
    setUsers(storedData);
  };

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData({ ...formData, [name]: value });
  };

  const handleDelete = (index) => {
    const updatedUsers = [...users];
    updatedUsers.splice(index, 1);

    // Update the state and local storage to remove the deleted user
    setUsers(updatedUsers);
    window.localStorage.setItem("userData", JSON.stringify(updatedUsers));
  };

  return (
    <div className="App">
      <div className="container">
        <div className="row">
        <form className="mt-4" onSubmit={handleSubmit}>
        <div className="form-outline mb-4">
          <input
            type="text"
            id="form1Example"
            className="form-control"
            name="username"
            value={formData.username}
            onChange={handleInputChange}
          />
          <label className="form-label" htmlFor="form1Example">
            User Name
          </label>
        </div>
        <div className="form-outline mb-4">
          <input
            type="email"
            id="form1Example1"
            className="form-control"
            name="email"
            value={formData.email}
            onChange={handleInputChange}
          />
          <label className="form-label" htmlFor="form1Example1">
            Email address
          </label>
        </div>

        <div className="form-outline mb-4">
          <input
            type="password"
            id="form1Example2"
            className="form-control"
            name="password"
            value={formData.password}
            onChange={handleInputChange}
          />
          <label className="form-label" htmlFor="form1Example2">
            Password
          </label>
        </div>

        <button type="submit" className="btn btn-primary btn-block">
          Sign in
        </button>
      </form>
        </div>

        {users.length > 0 && (
          <div className="row mt-4">
            <h2>User Details</h2>
            <ul>
              {users.map((user, index) => (
                <li key={index}>
                  <strong>Username:</strong> {user.username}<br />
                  <strong>Email:</strong> {user.email}
                  <button
                    type="button"
                    className="btn btn-danger btn-sm ml-2"
                    onClick={() => handleDelete(index)}
                  >
                    Delete
                  </button>
                </li>
              ))}
            </ul>
          </div>
        )}
      </div>
    </div>
  );
}

export default App;
